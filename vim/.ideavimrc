let mapleader=' '

" =========== OS SPECIFIC ===========

" source ideavimrc
nnoremap <F12> :source ~/.ideavimrc<CR>


" ============= PLUGINS =============

set surround
set multiple-cursors

" emulates tommcdo/vim-exchange
" TODO: add more text objects
nnoremap cxiw "jyiwma
nnoremap criw "kdiw"jPmb`a"_diw"kP

" emulates wellle/targets.vim
" (no di/da mappings here, they clash with surround)
" better text objects for braces
" keep the ci(, ci> etc. for the regular behavior
nnoremap ci) %ci)
nnoremap ca) %ca)
nnoremap ci] %ci]
nnoremap ca] %ca]
nnoremap ci} %ci}
nnoremap ca} %ca}
nnoremap ci< hf<ci>
nnoremap ca< hf<ca>
" text objects for delimiters
nnoremap ci/ f/cT/
nnoremap ca/ f/vF/c
nnoremap ci, f,cT,
nnoremap ca, f,vF,c
nnoremap ci. f.cT.
nnoremap ca. f.vF.c
nnoremap ci_ f_cT_
nnoremap ca_ f_vF_c
nnoremap ci- f-cT-
nnoremap ca- f-vF-c
nnoremap ci% f%cT%
nnoremap ca% f%vF%c
nnoremap ci= f=cT=
nnoremap ca= f=vF=c
nnoremap ci? f?cT?
nnoremap ca? f?vF?c
nnoremap ci! f!cT!
nnoremap ca! f!vF!c
nnoremap ci& f&cT&
nnoremap ca& f&vF&c
" (these don't clash with surround)
nnoremap di/ f/dT/
nnoremap da/ f/vF/d
nnoremap di, f,dT,
nnoremap da, f,vF,d
nnoremap di. f.dT.
nnoremap da. f.vF.d
nnoremap di_ f_dT_
nnoremap da_ f_vF_d
nnoremap di- f-dT-
nnoremap da- f-vF-d
nnoremap di% f%dT%
nnoremap da% f%vF%d
nnoremap di= f=dT=
nnoremap da= f=vF=d
nnoremap di? f?dT?
nnoremap da? f?vF?d
nnoremap di! f!dT!
nnoremap da! f!vF!d
nnoremap di& f&dT&
nnoremap da& f&vF&d
" text objects for arguments
nnoremap cif lT(ct,
nnoremap cim T,lct,
nnoremap cil hf)T,lct)
nnoremap caf lT(vf,lc
nnoremap cam T,cf,
nnoremap cal hf)cF,
nnoremap dif lT(dt,
nnoremap dim T,ldt,
nnoremap dil hf)T,ldt)
nnoremap daf lT(vf,ld
nnoremap dam T,df,
nnoremap dal hf)dF,

" emulates vim-scripts/ReplaceWithRegister
nnoremap öiw "_diwP
nnoremap öaw "_dawP
nnoremap öiW "_dIwP
nnoremap öaW "_dAwP
nnoremap öis "_disP
nnoremap öas "_dasP
nnoremap öip "_dipP
nnoremap öap "_dapP
nnoremap öib "_dibP
nnoremap öab "_dabP
nnoremap öiB "_diBP
nnoremap öaB "_daBP
nnoremap öi( "_di(P
nnoremap öi) "_di)P
nnoremap öa( "_da(P
nnoremap öa) "_da)P
nnoremap öi[ "_di[P
nnoremap öi] "_di]P
nnoremap öa[ "_da[P
nnoremap öa] "_da]P
nnoremap öi{ "_di{P
nnoremap öi} "_di}P
nnoremap öa{ "_da{P
nnoremap öa} "_da}P
nnoremap öi< "_di<P
nnoremap öi> "_di>P
nnoremap öa< "_da<P
nnoremap öa> "_da>P
nnoremap öi" "_di"P
nnoremap öa" "_da"P
nnoremap öi' "_di'P
nnoremap öa' "_da'P
nnoremap öi` "_di`P
nnoremap öa` "_da`P
nnoremap öit "_ditP
nnoremap öat "_datP
nnoremap Ö "_Dp
nnoremap öG "_dGp
nnoremap öö "_ddP
vnoremap ö "_dP
" öt and öf mappings
nnoremap öt" "_dt"P
nnoremap öt# "_dt#P
nnoremap öt$ "_dt$P
nnoremap öt% "_dt%P
nnoremap öt& "_dt&P
nnoremap öt' "_dt'P
nnoremap öt( "_dt(P
nnoremap öt) "_dt)P
nnoremap öt* "_dt*P
nnoremap öt+ "_dt+P
nnoremap öt, "_dt,P
nnoremap öt- "_dt-P
nnoremap öt. "_dt.P
nnoremap öt/ "_dt/P
nnoremap öt: "_dt:P
nnoremap öt; "_dt;P
nnoremap öt< "_dt<P
nnoremap öt= "_dt=P
nnoremap öt> "_dt>P
nnoremap öt? "_dt?P
nnoremap öt@ "_dt@P
nnoremap ötA "_dtAP
nnoremap ötB "_dtBP
nnoremap ötC "_dtCP
nnoremap ötD "_dtDP
nnoremap ötE "_dtEP
nnoremap ötF "_dtFP
nnoremap ötG "_dtGP
nnoremap ötH "_dtHP
nnoremap ötI "_dtIP
nnoremap ötJ "_dtJP
nnoremap ötK "_dtKP
nnoremap ötL "_dtLP
nnoremap ötM "_dtMP
nnoremap ötN "_dtNP
nnoremap ötO "_dtOP
nnoremap ötP "_dtPP
nnoremap ötQ "_dtQP
nnoremap ötR "_dtRP
nnoremap ötS "_dtSP
nnoremap ötT "_dtTP
nnoremap ötU "_dtUP
nnoremap ötV "_dtVP
nnoremap ötW "_dtWP
nnoremap ötX "_dtXP
nnoremap ötY "_dtYP
nnoremap ötZ "_dtZP
nnoremap öt[ "_dt[P
nnoremap öt\ "_dt\P
nnoremap öt] "_dt]P
nnoremap öt^ "_dt^P
nnoremap öt_ "_dt_P
nnoremap öt` "_dt`P
nnoremap öta "_dtaP
nnoremap ötb "_dtbP
nnoremap ötc "_dtcP
nnoremap ötd "_dtdP
nnoremap öte "_dteP
nnoremap ötf "_dtfP
nnoremap ötg "_dtgP
nnoremap öth "_dthP
nnoremap öti "_dtiP
nnoremap ötj "_dtjP
nnoremap ötk "_dtkP
nnoremap ötl "_dtlP
nnoremap ötm "_dtmP
nnoremap ötn "_dtnP
nnoremap öto "_dtoP
nnoremap ötp "_dtpP
nnoremap ötq "_dtqP
nnoremap ötr "_dtrP
nnoremap öts "_dtsP
nnoremap ött "_dttP
nnoremap ötu "_dtuP
nnoremap ötv "_dtvP
nnoremap ötw "_dtwP
nnoremap ötx "_dtxP
nnoremap öty "_dtyP
nnoremap ötz "_dtzP
nnoremap öt{ "_dt{P
nnoremap öt\| "_dt\|P
nnoremap öt} "_dt}P
nnoremap öt~ "_dt~P
nnoremap öf" "_df"P
nnoremap öf# "_df#P
nnoremap öf$ "_df$P
nnoremap öf% "_df%P
nnoremap öf& "_df&P
nnoremap öf' "_df'P
nnoremap öf( "_df(P
nnoremap öf) "_df)P
nnoremap öf* "_df*P
nnoremap öf+ "_df+P
nnoremap öf, "_df,P
nnoremap öf- "_df-P
nnoremap öf. "_df.P
nnoremap öf/ "_df/P
nnoremap öf: "_df:P
nnoremap öf; "_df;P
nnoremap öf< "_df<P
nnoremap öf= "_df=P
nnoremap öf> "_df>P
nnoremap öf? "_df?P
nnoremap öf@ "_df@P
nnoremap öfA "_dfAP
nnoremap öfB "_dfBP
nnoremap öfC "_dfCP
nnoremap öfD "_dfDP
nnoremap öfE "_dfEP
nnoremap öfF "_dfFP
nnoremap öfG "_dfGP
nnoremap öfH "_dfHP
nnoremap öfI "_dfIP
nnoremap öfJ "_dfJP
nnoremap öfK "_dfKP
nnoremap öfL "_dfLP
nnoremap öfM "_dfMP
nnoremap öfN "_dfNP
nnoremap öfO "_dfOP
nnoremap öfP "_dfPP
nnoremap öfQ "_dfQP
nnoremap öfR "_dfRP
nnoremap öfS "_dfSP
nnoremap öfT "_dfTP
nnoremap öfU "_dfUP
nnoremap öfV "_dfVP
nnoremap öfW "_dfWP
nnoremap öfX "_dfXP
nnoremap öfY "_dfYP
nnoremap öfZ "_dfZP
nnoremap öf[ "_df[P
nnoremap öf\ "_df\P
nnoremap öf] "_df]P
nnoremap öf^ "_df^P
nnoremap öf_ "_df_P
nnoremap öf` "_df`P
nnoremap öfa "_dfaP
nnoremap öfb "_dfbP
nnoremap öfc "_dfcP
nnoremap öfd "_dfdP
nnoremap öfe "_dfeP
nnoremap öff "_dffP
nnoremap öfg "_dfgP
nnoremap öfh "_dfhP
nnoremap öfi "_dfiP
nnoremap öfj "_dfjP
nnoremap öfk "_dfkP
nnoremap öfl "_dflP
nnoremap öfm "_dfmP
nnoremap öfn "_dfnP
nnoremap öfo "_dfoP
nnoremap öfp "_dfpP
nnoremap öfq "_dfqP
nnoremap öfr "_dfrP
nnoremap öfs "_dfsP
nnoremap öft "_dftP
nnoremap öfu "_dfuP
nnoremap öfv "_dfvP
nnoremap öfw "_dfwP
nnoremap öfx "_dfxP
nnoremap öfy "_dfyP
nnoremap öfz "_dfzP
nnoremap öf{ "_df{P
nnoremap öf\| "_df\|P
nnoremap öf} "_df}P
nnoremap öf~ "_df~P


" ============= GENERAL =============

" line numbers
set number relativenumber

" search settings
set incsearch hlsearch ignorecase smartcase gdefault

set timeoutlen=2000    " timeout for keymappings
set clipboard=unnamed  " use system clipboard
set scrolloff=1        " pad scrolling with one line
set showmode           " show current mode in statusbar
set visualbell         " removes errorbells


" ============= MAPPINGS =============

" move between splits
nnoremap <A-L> <C-W>l
nnoremap <A-H> <C-W>h

" makes these easier to use
noremap , :
noremap : ;
noremap ; ,

" make Y behave the same way as D and C
nnoremap Y y$

" makes v and V more consistent with other commands
nnoremap vv V
nnoremap V <C-V>$

" makes these more useful
nnoremap S ciw

" make K the logical opposite of J
nnoremap K a<CR><Esc>k$

" change enter behaviour
nnoremap <CR> mqo<Esc>`q
nnoremap <S-Enter> mqO<Esc>`q
nnoremap <Leader><CR> o<Esc>

" better way to indent
nnoremap <BS> <<
nnoremap <TAB> >>
vnoremap <BS> <gv
vnoremap <TAB> >gv

" Q plays back q macro
nnoremap Q @q

" clear highlights
nnoremap <Esc> <Esc>:noh<CR>

" change eol comment to line comment and vice versa
nnoremap ä $?\v//\|#<CR>gEl"_d/\v\/\/\|#<CR>:noh<CR>"qDO<C-R>q<Esc>^
nnoremap Ä ^"qD"_ddA  <C-R>q<Esc>^

" navigate to previous function name (kinda hacky coz of ideavim bugs)
nnoremap <C-T> ?\(\s*def \)\@<=.\+:noh<CR><CR>

" makes using marks a lot better, ` mapping clashes with surround
nnoremap ' :action ShowBookmarks<CR>
nnoremap m :action ToggleBookmarkWithMnemonic<CR>

" comment out lines and paragraphs etc
nnoremap gcc :action CommentByLineComment<CR>
nnoremap gcip vip:action CommentByLineComment<CR>
nnoremap gci} vi}:action CommentByLineComment<CR>
nnoremap gci{ vi{:action CommentByLineComment<CR>
vnoremap gc :action CommentByLineComment<CR>

nnoremap gr :action GotoRelated<CR>

nnoremap <Leader>a :action GotoAction<CR>
nnoremap <Leader>b :action ToggleLineBreakpoint<CR>
nnoremap <Leader>c :action GotoClass<CR>
nnoremap <Leader>d :action QuickJavaDoc<CR>
nnoremap <Leader>e :action Run<CR>
nnoremap <Leader>f :action GotoFile<CR>
nnoremap <Leader>g :action Generate<CR>
nnoremap <Leader>h :action HighlightUsagesInFile<CR>
nnoremap <Leader>i :action QuickImplementations<CR>
nnoremap <Leader>j :action ShowNavBar<CR>
nnoremap <Leader>k :action KJumpAction<CR>
nnoremap <Leader>l :action FindInPath<CR>
nnoremap <Leader>m :action RecentFiles<CR>
nnoremap <Leader>n :action ViewBreakpoints<CR>
nnoremap <Leader>o :action ShowReformatFileDialog<CR>
vnoremap <Leader>o :action VimReformatVisual<CR>
nnoremap <Leader>p :action PasteMultiple<CR>
noremap  <Leader>q :action Unwrap<CR>
nnoremap <Leader>r :action RenameElement<CR>
nnoremap <Leader>s :action GotoSymbol<CR>
noremap  <Leader>t :action ExpressionTypeInfo<CR>
nnoremap <Leader>u :action ShowUsages<CR>
nnoremap <Leader>v :action Debug<CR>
noremap  <Leader>w :action SurroundWith<CR>
noremap  <Leader>x :action Refactorings.QuickListPopupAction<CR>
nnoremap <Leader>y :action ShowErrorDescription<CR>
nnoremap <Leader>z :action RenameFile<CR>
nnoremap <Leader>ö :action FileStructurePopup<CR>
nnoremap <Leader>ä :action CallHierarchy<CR>

nnoremap <Leader>< :action NewFile<CR>
nnoremap <Leader>[ :action LocalHistory.ShowHistory<CR>
nnoremap <Leader>] :action ChooseRunConfiguration<CR>

nnoremap <Leader><Esc> :action MarkNotificationsAsRead<CR>

nnoremap <C-H> :action ParameterInfo<CR>
nnoremap <C-J> :action EditorCloneCaretBelow<CR>
nnoremap <C-K> :action EditorCloneCaretAbove<CR>
inoremap <C-H> <C-O>:action ParameterInfo<CR>
inoremap <C-J> <C-O>:action EditorCloneCaretBelow<CR>
inoremap <C-K> <C-O>:action EditorCloneCaretAbove<CR>

nnoremap <C-P> :action GotoPreviousError<CR>
nnoremap <C-N> :action GotoNextError<CR>

nnoremap <C-O> :action Back<CR>
nnoremap <C-I> :action Forward<CR>

nnoremap <C-2> :action ActivateProjectToolWindow<CR>
nnoremap <C-3> :action ActivateRunToolWindow<CR>
nnoremap <C-4> :action ActivateDebugToolWindow<CR>
nnoremap <C-5> :action ActivateTerminalToolWindow<CR>
nnoremap <C-6> :action ActivatePythonConsoleToolWindow<CR>
nnoremap <C-7> :action ActivateHierarchyToolWindow<CR>
nnoremap <C-0> :action ActivateVersionControlToolWindow<CR>
