let mapleader=' '

" =========== OS SPECIFIC ===========

" source ideavimrc
nnoremap <F12> :source ~/.ideavimrc<CR>


" ============= PLUGINS =============

set surround
set multiple-cursors

" emulates easymotion/vim-easymotion
nnoremap <Leader>f :action KJumpAction<CR>

" emulates tommcdo/vim-exchange
" TODO: add with more text objects
nnoremap cxiw "jyiwma
nnoremap criw "kdiw"jPmb`a"_diw"kP

" emulates wellle/targets.vim
" no di/da mappings, they clash with surround
nnoremap ci) %ci)
nnoremap ca) %ca)
nnoremap ci( %ci(
nnoremap ca( %ca(
nnoremap ci] %ci]
nnoremap ca] %ca]
nnoremap ci[ %ci[
nnoremap ca[ %ca[
nnoremap ci} %ci}
nnoremap ca} %ca}
nnoremap ci{ %ci{
nnoremap ca{ %ca{
nnoremap ci> f>ci>
nnoremap ca> f>ca>
nnoremap ci< f<ci<
nnoremap ca< f<ca<
nnoremap ci/ T/ct/
nnoremap ca/ F/cf/
nnoremap ci, T,ct,
nnoremap ca, F,cf,
nnoremap ci. T.ct.
nnoremap ca. F.cf.
" these don't clash with surround
nnoremap di/ T/dt/
nnoremap da/ F/df/
nnoremap di, T,dt,
nnoremap da, F,df,
nnoremap di. T.dt.
nnoremap da. F.df.

" emulates vim-scripts/ReplaceWithRegister
nnoremap öiw "_diwP
nnoremap öaw "_dawP
nnoremap öiW "_dIwP
nnoremap öaW "_dAwP
nnoremap öis "_disP
nnoremap öas "_dasP
nnoremap öip "_dipP
nnoremap öap "_dapP
nnoremap öib "_dibP
nnoremap öab "_dabP
nnoremap öiB "_diBP
nnoremap öaB "_daBP
nnoremap öi( "_di(P
nnoremap öi) "_di)P
nnoremap öa( "_da(P
nnoremap öa) "_da)P
nnoremap öi[ "_di[P
nnoremap öi] "_di]P
nnoremap öa[ "_da[P
nnoremap öa] "_da]P
nnoremap öi{ "_di{P
nnoremap öi} "_di}P
nnoremap öa{ "_da{P
nnoremap öa} "_da}P
nnoremap öi< "_di<P
nnoremap öi> "_di>P
nnoremap öa< "_da<P
nnoremap öa> "_da>P
nnoremap öi" "_di"P
nnoremap öa" "_da"P
nnoremap öi' "_di'P
nnoremap öa' "_da'P
nnoremap öi` "_di`P
nnoremap öa` "_da`P
nnoremap öit "_ditP
nnoremap öat "_datP
nnoremap Ö "_Dp
nnoremap öG "_dGp
nnoremap öö "_ddP
vnoremap ö "_dP


" ============= GENERAL =============

" line numbers
set number relativenumber

" search settings
set incsearch hlsearch ignorecase smartcase gdefault

set timeoutlen=2000    " timeout for keymappings
set clipboard=unnamed  " use system clipboard
set scrolloff=1        " pad scrolling with one line
set showmode           " show current mode in statusbar
set visualbell         " removes errorbells


" ============= MAPPINGS =============

" move between splits
nnoremap <A-L> <C-W>l
nnoremap <A-H> <C-W>h

" makes these easier to use
noremap , :
noremap : ;
noremap ; ,

" make Y behave the same way as D and C
nnoremap Y y$

" makes v and V more consistent with other commands
nnoremap vv V
nnoremap V <C-V>$

" makes these more useful
nnoremap S ciw

" make K the logical opposite of J
nnoremap K a<CR><Esc>k$

" change enter behaviour
nnoremap <CR> mqo<Esc>`q
nnoremap <S-Enter> mqO<Esc>`q
nnoremap <Leader><CR> o<Esc>

" better way to indent
nnoremap <BS> <<
nnoremap <TAB> >>
vnoremap <BS> <gv
vnoremap <TAB> >gv

" Q plays back q macro
nnoremap Q @q

" clear highlights
nnoremap <Esc> <Esc>:noh<CR>

" change eol comment to line comment and vice versa
nnoremap ä $?\v//\|#<CR>gEl"_d/\v\/\/\|#<CR>:noh<CR>"qDO<C-R>q<Esc>^
nnoremap Ä ^"qD"_ddA  <C-R>q<Esc>^

" navigate to previous function name (kinda hacky coz of ideavim bugs)
nnoremap <C-T> ?\(\s*def \)\@<=.\+:noh<CR><CR>

" makes using marks a lot better, ` mapping clashes with surround
nnoremap ' :action ShowBookmarks<CR>
nnoremap m :action ToggleBookmarkWithMnemonic<CR>

" comment out lines and paragraphs etc
nnoremap gcc :action CommentByLineComment<CR>
nnoremap gcip vip:action CommentByLineComment<CR>
nnoremap gci} vi}:action CommentByLineComment<CR>
nnoremap gci{ vi{:action CommentByLineComment<CR>
vnoremap gc :action CommentByLineComment<CR>

nnoremap gr :action GotoRelated<CR>

nnoremap <Leader>a :action GotoAction<CR>
nnoremap <Leader>b :action ToggleLineBreakpoint<CR>
nnoremap <Leader>c :action FileStructurePopup<CR>
nnoremap <Leader>d :action QuickJavaDoc<CR>
nnoremap <Leader>e :action Run<CR>
" kjump          f
nnoremap <Leader>g :action Generate<CR>
nnoremap <Leader>h :action HighlightUsagesInFile<CR>
nnoremap <Leader>i :action QuickImplementations<CR>
nnoremap <Leader>j :action ShowNavBar<CR>
nnoremap <Leader>k :action GotoFile<CR>
nnoremap <Leader>l :action FindInPath<CR>
nnoremap <Leader>m :action RecentFiles<CR>
nnoremap <Leader>n :action ViewBreakpoints<CR>
nnoremap <Leader>o :action ShowReformatFileDialog<CR>
vnoremap <Leader>o :action VimReformatVisual<CR>
nnoremap <Leader>p :action PasteMultiple<CR>
noremap <Leader>q :action Unwrap<CR>
nnoremap <Leader>r :action RenameElement<CR>
nnoremap <Leader>s :action GotoSymbol<CR>
noremap <Leader>t :action ExpressionTypeInfo<CR>
nnoremap <Leader>u :action ShowUsages<CR>
nnoremap <Leader>v :action Debug<CR>
noremap <Leader>w :action SurroundWith<CR>
noremap <Leader>x :action Refactorings.QuickListPopupAction<CR>
nnoremap <Leader>y :action ShowErrorDescription<CR>
nnoremap <Leader>z :action RenameFile<CR>

nnoremap <Leader>< :action NewFile<CR>
nnoremap <Leader>[ :action LocalHistory.ShowHistory<CR>
nnoremap <Leader>] :action ChooseRunConfiguration<CR>

nnoremap <Leader><Esc> :action MarkNotificationsAsRead<CR>

nnoremap <C-H> :action ParameterInfo<CR>
nnoremap <C-J> :action EditorCloneCaretBelow<CR>
nnoremap <C-K> :action EditorCloneCaretAbove<CR>
inoremap <C-H> <C-O>:action ParameterInfo<CR>
inoremap <C-J> <C-O>:action EditorCloneCaretBelow<CR>
inoremap <C-K> <C-O>:action EditorCloneCaretAbove<CR>

nnoremap <C-P> :action GotoPreviousError<CR>
nnoremap <C-N> :action GotoNextError<CR>

nnoremap <C-O> :action Back<CR>
nnoremap <C-I> :action Forward<CR>

nnoremap <C-2> :action ActivateProjectToolWindow<CR>
nnoremap <C-3> :action ActivateRunToolWindow<CR>
nnoremap <C-4> :action ActivateDebugToolWindow<CR>
nnoremap <C-5> :action ActivateTerminalToolWindow<CR>
nnoremap <C-6> :action ActivatePythonConsoleToolWindow<CR>
